@model SCASA.Models.ModelClasses.InventoryMasterModel; 
 
@{
    var invId = Model.InventoryId;

}
<input type="hidden" name="selectedSubCat" id="selectedSubCat" value="@Model.SubCategoryId" />
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="header-icon">
            <i class="fa fa-dashboard"></i>
        </div>
        <div class="header-title">
            <div class="row">
                <div class="col-md-9">
                    <h1>Add Inventory</h1>
                    <small>Add Detail Inventory.</small>
                </div>
                <div class="col-md-3">
                    <div class="btn-group float-right" role="group">
                        <div class="buttonexport" id="buttonlist">
                            <a class="btn btn-add" href="~/Inventory/All?pageNumber=@ViewBag.pn&pageSize=@ViewBag.ps&type=@ViewBag.ty&search=@ViewBag.ser&CategoryId=@ViewBag.catId&SubCategoryId=@ViewBag.suCId">
                                <i class="fa fa-reply mr-2"></i>Back
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- Main content -->
    <div class="content">
        <div class="row">
            <!-- Form controls -->
            <div class="col-sm-12">
                <div class="card  all_btn_card" id="lobicard-custom-control1" data-sortable="true">
                    <div class="card-header all_card_btn">
                        <div class="card-title custom_title">
                            <h5>Add Inventory</h5>
                        </div>
                    </div>
                    <div class="card-body">
                        <form method="post" enctype="multipart/form-data" action="~/Inventory/InventoryData">
                            @Html.HiddenFor(m => m.InventoryId)
                            <div class="row">
                                <div class="col-sm-4">
                                    <div class="form-group">
                                        <label>Category</label>
                                        <select id="catDD" class="form-control select2" name="CategoryId" onchange="GetSubCats()" >
                                            @foreach (var c in Model.categoryDrops)
                                            {
                                                if (c.CategoryId == Model.CategoryId)
                                                {
                                                    <option value="@c.CategoryId" selected>@c.CategoryName</option>
                                                }
                                                else
                                                {
                                                    <option value="@c.CategoryId">@c.CategoryName</option>
                                                }

                                            }
                                        </select>
                                      @*  @Html.DropDownListFor(x => Model.CategoryId, new SelectList(Model.categoryDrops, "CategoryId", "CategoryName", Model.CategoryId), new { @id = "catDD", @class = "form-control select2", @onchange = "GetSubCats()" })*@
                                    </div>
                                </div>
                                <div class="col-sm-4">
                                    <div class="form-group">
                                        <label>Sub Category</label>
                                        @Html.DropDownListFor(x => Model.SubCategoryId, new SelectList(Model.subCategoryDrops, "SubCategoryId", "SubCategoryName", Model.SubCategoryId), new { @id = "subcatDD", @class = "form-control select2", @onchange="SelectGst()" })
                                    </div>
                                </div>
                                <div class="col-sm-4">
                                    <div class="form-group">
                                        <label>Model Number <span class="text-danger">*</span></label>
                                        <input type="text" class="form-control" placeholder="Enter Model Number" name="ModelNumber" value="@Model.ModelNumber">
                                        @Html.ValidationMessageFor(m => m.ModelNumber, null, new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-sm-12">
                                    <div class="form-group">
                                        <label>Item Title (For Sales Model only) <span class="text-danger">*</span> </label>
                                        <textarea class="form-control" rows="3" name="Title">@Model.Title</textarea>
                                        @Html.ValidationMessageFor(m => m.Title, null, new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-sm-12">
                                    <div class="form-group">
                                        <label>Item Description <span class="text-danger">*</span> </label>
                                        <textarea class="form-control" rows="3" name="ItemDescription">@Model.ItemDescription</textarea>
                                        @Html.ValidationMessageFor(m => m.ItemDescription, null, new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <label>Brand </label>
                                        <input type="text" class="form-control" name="Brand" placeholder="Enter Brand" value="@Model.Brand">
                                        @Html.ValidationMessageFor(m => m.Brand, null, new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <label>Height (Feet/mm) <span class="text-danger">*</span></label>
                                        <input type="text" class="form-control" name="Height" placeholder="Enter Height" value="@Model.Height">
                                        @Html.ValidationMessageFor(m => m.Height, null, new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <label>Width (Feet/mm) <span class="text-danger">*</span></label>
                                        <input type="text" class="form-control" name="Width" placeholder="Enter Width" value="@Model.Width">
                                        @Html.ValidationMessageFor(m => m.Width, null, new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <label>Breadth  (Feet/mm) <span class="text-danger">*</span></label>
                                        <input type="text" class="form-control" placeholder="Enter Breadth" name="Breadth" value="@Model.Breadth">
                                        @Html.ValidationMessageFor(m => m.Breadth, null, new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <label>Color Name   <span class="text-danger">*</span></label>
                                        <input type="text" class="form-control" placeholder="Enter Color Name" name="ColorName" value="@Model.ColorName">
                                        @Html.ValidationMessageFor(m => m.ColorName, null, new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-sm-3">  
                                    <div class="form-group">
                                        <label>Color Image  </label>
                                        <input type="file" class="form-control" multiple name="ColorImageUploaded">
                                    </div>
                                </div>
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <label>Inventory Status</label>
                                        @Html.DropDownListFor(x => Model.InventoryStatusId, new SelectList(Model.inventoryStatusDrops, "StatusId", "StatusName", Model.InventoryStatusId), new { @class = "form-control select2" })
                                    </div>
                                </div>
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <label>Inventory Condition</label>
                                        @Html.DropDownListFor(x => Model.InventoryConditonId, new SelectList(Model.conditionDrops, "ConditionId", "ConditionName", Model.InventoryConditonId), new { @class = "form-control select2" })
                                    </div>
                                </div>
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <label>Inventory Location</label>
                                        @Html.DropDownListFor(x => Model.InventoryLocationId, new SelectList(Model.locationDrops, "LocationId", "LocationName", Model.InventoryLocationId), new { @class = "form-control select2" })
                                    </div>
                                </div>
                                @*<div class="col-sm-3">
                    <div class="form-group">
                        <label>Lead Time</label>
                        <input type="text" name="LeadTime" class="form-control" placeholder="Enter Lead time in days" value="@Model.LeadTime">
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                        <label>Threshold</label>
                        <input type="text" name="ThresholdValue" class="form-control" placeholder="Enter Threshold 00.00" value="@Model.ThresholdValue">
                    </div>
                </div>*@
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <label>Received Date  </label>
                                        @Html.EditorFor(model => model.RecievedDate, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                                @if (ViewBag.LoggedUser.userTypeCode != 8)
                                {
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            <label>Actual Price <span class="text-danger">*</span> </label>
                                            <input type="text" class="form-control" placeholder="Enter Actual Price" name="ActualPrice" id="actual" value="@Model.ActualPrice" onblur="GetMRPPrice()">
                                            @Html.ValidationMessageFor(m => m.ActualPrice, null, new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            <label>MRP Factor </label>
                                            @Html.DropDownListFor(x => Model.MRPFactorId, new SelectList(Model.mRPfactorDrops, "TRId", "FactorValue", Model.MRPFactorId), new { @id = "factor", @class = "form-control select2", @onchange = "GetMRPPrice()" })
                                        </div>
                                    </div>
                                    <div class="col-sm-3">
                                        <div class="form-group">
                                            <label>MRP Price <span class="text-danger">*</span> </label>
                                            <input type="text" class="form-control" placeholder="Enter MRPPrice" name="MRPPrice" id="mrp" value="@Model.MRPPrice" readonly="readonly">
                                            @Html.ValidationMessageFor(m => m.MRPPrice, null, new { @class = "text-danger" })
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    @Html.HiddenFor(a => a.ActualPrice)
                                    @Html.HiddenFor(a => a.mrpfac)
                                    @Html.HiddenFor(a => a.MRPPrice)
                                }


                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <label>HSN Code </label>
                                        <input type="text" class="form-control" placeholder="Enter HSN code" name="HSNCode" value="@Model.HSNCode">
                                        @Html.ValidationMessageFor(m => m.HSNCode, null, new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <label>Rack Name  </label>
                                        <input type="text" class="form-control" placeholder="Enter Rack Name " name="RackName" value="@Model.RackName">
                                    </div>
                                </div>
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <label>Supplier Detail</label>
                                        <input type="text" class="form-control" placeholder="Enter Supplier Details" name="PODetails" value="@Model.PODetails">
                                    </div>
                                </div>
                                @*<div class="col-sm-3">
                    <div class="form-group">
                        <label>PO Date </label>
                        @Html.EditorFor(model => model.PODate, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>*@
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <label>Invoice Number </label>
                                        <input type="text" class="form-control" placeholder="Enter Invoice Number" name="InvoiceNumber" value="@Model.InvoiceNumber">
                                    </div>
                                </div>
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <label>Qty  <span class="text-danger">*</span></label>
                                        <input type="text" class="form-control" placeholder="Enter Qty " name="Qty" value="@Model.Qty">
                                        @Html.ValidationMessageFor(m => m.Qty, null, new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <label>Tax Applicable</label>
                                        <input type="text" class="form-control" name="GSTMasterId" value="@Model.GSTMasterId" hidden id="gstId" />
                                        <input type="text" class="form-control" value="" readonly="readonly" id="gstName" />
                                        @*@Html.DropDownListFor(x => Model.GSTMasterId, new SelectList(Model.gstDrop, "GSTMasterId", "TaxName", Model.GSTMasterId), new { @id="GsdDrop", @class = "form-control select2" })*@
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label>Primary Image upload <span class="text-danger">*</span></label>
                                        <input type="file" name="ProductMainImageUploaded" multiple>
                                        <input type="hidden" name="old_picture">
                                        @Html.ValidationMessageFor(m => m.PrimaryImage, null, new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label>Other Images  upload</label>
                                        <input type="file" name="ProductOtherImagesUploaded" multiple>
                                        <input type="hidden" name="old_picture1">
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label>Documents Upload</label>
                                        <input type="file" name="DocumentsUploaded" multiple>
                                        <input type="hidden" name="old_picture2">
                                    </div>
                                </div>
                            </div>

                            <div class="reset-button">
                                <button class="btn btn-success" type="submit"> Save</button>
                            </div>
                        </form>
                        @if (Model.InventoryId > 0)
                        {
                        <div class="row">
                            <div class="col-sm-12">
                                <h4 class="mb-2">Uploaded Images</h4>
                            </div>
                            @foreach (var mi in Model.MainImagesList)
                            {
                                <div class="col-sm-2">
                                    <div class="ImgEdit">
                                        <img src="~/ProductImages/@mi" width="100%">
                                        <button class="btn btn-success btn-sm mt-1" onclick="DeleteMainImage('@mi')"> Del</button>
                                    </div>
                                </div>
                            }
                            @foreach (var oi in Model.OtherImages)
                            {
                                <div class="col-sm-2">
                                    <div class="ImgEdit">
                                        <img src="~/ProductImages/@oi.ImageURL" width="100%">
                                        <button class="btn btn-success btn-sm mt-1" onclick="DeleteOtherImage(@oi.ImageId)"> Del</button>
                                    </div>
                                </div>
                            }
                        </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.content -->
</div>

<script>
    $(document).ready(function () {
        $('.select2').select2();
       GetSubCats();
    });
    function GetSubCats() {
        var catid = $('#catDD option:selected').val();
        $.ajax({
            url: GlobalUrl + "Common/GetAllSubCats?catId=" + catid,
            type: 'post',
            data: '{}',
            success: function (res) {
                var r = res.result.length;
                var row = '';
                var selectedSubcat = $('#selectedSubCat').val();

                if (r > 0) {

                    for (var i = 0; i < r; i++) {
                        if (res.result[i].subCategoryId == selectedSubcat) {
                            row = row + '<option value="' + res.result[i].subCategoryId + '" selected>' + res.result[i].subCategoryName + '</option>';
                        }
                        else {
                            row = row + '<option value="' + res.result[i].subCategoryId + '">' + res.result[i].subCategoryName + '</option>';
                        }

                        //$('#SubCategoryId').append('<option value="' + res.result[i].subCategryId + '">' + res.result[i].subCategoryName + '</option>');
                    }
                }
                $('#subcatDD').html('');
                $('#subcatDD').html(row);
                SelectGst();
            }
        });
    }
    function SelectGst() {
        var subSatid = $('#subcatDD option:selected').val();
        $.ajax({
            url: GlobalUrl + "Master/GetGstBySubCat?subId=" + subSatid,
            type: 'post',
            data: '{}',
            success: function (re) {
                if (re.re.gstMasterId > 0) {
                    //$('#GsdDrop').val(re.re.gstMasterId).trigger('change');
                    //$('#gstId').attr("value", re.re.gstMasterId);
                    $('#gstId').val(re.re.gstMasterId);
                    var name = re.re.taxName + " " + re.re.taxAmount + " %";
                    $('#gstName').val(name);
                    //$('#gstIName').attr("value", name);
                }
            }
        })
    }
    function GetMRPPrice() {
        var a = $("#actual").val();
        var actual = parseFloat(a);
        var f = $("#factor").children("option").filter(":selected").text();
        var factor = parseFloat(f);
        if (factor != 0) {
            $('#mrp').prop("readonly", true);
            var m = actual * factor;
            $('#mrp').attr("value", m);
        } else {
            $('#mrp').prop("readonly", false);
            $('#mrp').attr("value", 0);
        }
    }
    function DeleteOtherImage(id) {
        swal("Are you sure to delete the Image?", {
            buttons: {
                yes: {
                    text: "Yes",
                    value: "yes"
                },
                no: {
                    text: "No",
                    value: "no"
                }
            }
        }).then((value) => {
            if (value === "yes") {
                $.ajax({
                    url: GlobalUrl + "Inventory/DeleteOtherImage?id=" + id,
                    type: 'post',
                    data: '{}',
                    success: function (result) {
                        toastr["success"]("Successuflly deleted!");
                        window.location.href = window.location.href;
                    }
                });
            }
            else {
                toastr["error"]("Delete cancelled!")
            }
            return false;
        });
    }
    function DeleteMainImage(nme) {
        var imgId =@invId;
        swal("Are you sure to delete the Image?", {
            buttons: {
                yes: {
                    text: "Yes",
                    value: "yes"
                },
                no: {
                    text: "No",
                    value: "no"
                }
            }
        }).then((value) => {
            if (value === "yes") {
                $.ajax({
                    url: GlobalUrl + "Inventory/DeleteMainImage",
                    type: 'post',
                    data: {
                        'name': nme,
                        'id': imgId,
                    },
                    success: function (result) {
                        if (result.result.statusCode == 1) {
                            toastr["success"]("Successuflly deleted!");
                            window.location.href = window.location.href;
                        } else if (result.result.statusCode == 5) {
                            toastr["error"]("There Should Be 1 Primary Image Atleast!")
                        }
                    }
                });
            }
            else {
                toastr["error"]("Delete cancelled!")
            }
        });
    }
</script>